/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IREXReferral, IREXReferralInterface } from "../IREXReferral";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "affiliateId",
        type: "string",
      },
    ],
    name: "applyForAffiliate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "changeAffiliateAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "affiliateId",
        type: "string",
      },
    ],
    name: "disableAffiliate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "customerAddr",
        type: "address",
      },
    ],
    name: "getAffiliateAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "affiliateId",
        type: "string",
      },
    ],
    name: "isAffiliateEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
    ],
    name: "registerApp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "customerAddr",
        type: "address",
      },
      {
        internalType: "string",
        name: "affiliateId",
        type: "string",
      },
    ],
    name: "safeRegisterCustomer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
    ],
    name: "unregisterApp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "affiliateId",
        type: "string",
      },
    ],
    name: "verifyAffiliate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAffiliate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IREXReferral__factory {
  static readonly abi = _abi;
  static createInterface(): IREXReferralInterface {
    return new utils.Interface(_abi) as IREXReferralInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IREXReferral {
    return new Contract(address, _abi, signerOrProvider) as IREXReferral;
  }
}
