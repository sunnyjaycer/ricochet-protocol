/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BankStorage, BankStorageInterface } from "../BankStorage";

const _abi = [
  {
    inputs: [],
    name: "KEEPER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REPORTER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollateralTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollateralTokenLastUpdatedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollateralTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollateralTokenPriceGranularity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollateralizationRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDebtTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDebtTokenLastUpdatedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDebtTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDebtTokenPriceGranularity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInterestRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLiquidationPenalty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOriginationFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserveBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserveCollateralBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultCollateralAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vaultOwner",
        type: "address",
      },
    ],
    name: "getVaultCollateralizationRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultDebtAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultInterestPaymentFlowAmount",
    outputs: [
      {
        internalType: "int96",
        name: "",
        type: "int96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "vaults",
    outputs: [
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "debtAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        internalType: "int96",
        name: "interestPaymentFlow",
        type: "int96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610591806100206000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063685a5808116100b8578063c969ac061161007c578063c969ac06146102dc578063cb765c1d146102e4578063d267974c146102ec578063f327e324146102fd578063f91614eb14610305578063fc2e39a61461030d57600080fd5b8063685a5808146102255780636d483fe61461023d57806386ef573814610262578063a622ee7c1461026a578063a860988c146102c757600080fd5b8063317c9e421161010a578063317c9e4214610196578063364bc15a1461019e5780633f60d799146101c55780635257b566146101ec57806353388f44146101f4578063639989ab146101fc57600080fd5b806308dcd7c614610147578063151439501461015e57806317d7de7c146101665780631b9084b41461017b5780631e522b291461018e575b600080fd5b6005545b6040519081526020015b60405180910390f35b600a5461014b565b61016e610315565b6040516101559190610482565b61014b610189366004610454565b6103a7565b60145461014b565b600b5461014b565b61014b7ffc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4fab81565b61014b7f3204c940063673962b481a0395619b3dbbd137589c419e993978c1c71bcf68ec81565b60115461014b565b600e5461014b565b33600090815260026020526040902060030154600b0b604051600b9190910b8152602001610155565b3360009081526002602052604090206001015461014b565b6009546001600160a01b03165b6040516001600160a01b039091168152602001610155565b60135461014b565b6102a4610278366004610454565b6002602081905260009182526040909120805460018201549282015460039092015490929190600b0b84565b60408051948552602085019390935291830152600b0b6060820152608001610155565b3360009081526002602052604090205461014b565b60045461014b565b60105461014b565b6003546001600160a01b031661024a565b60085461014b565b600f5461014b565b60125461014b565b60606001805461032490610520565b80601f016020809104026020016040519081016040528092919081815260200182805461035090610520565b801561039d5780601f106103725761010080835404028352916020019161039d565b820191906000526020600020905b81548152906001019060200180831161038057829003601f168201915b5050505050905090565b6001600160a01b0381166000908152600260205260408120600101546103cf57506000919050565b6005546004546001600160a01b0384166000908152600260205260409020600101546103fb91906104f5565b61040591906104d5565b600b54600a546001600160a01b03851660009081526002602052604090205461042e91906104f5565b61043891906104d5565b610444906127106104f5565b61044e91906104d5565b92915050565b600060208284031215610465578081fd5b81356001600160a01b038116811461047b578182fd5b9392505050565b6000602080835283518082850152825b818110156104ae57858101830151858201604001528201610492565b818111156104bf5783604083870101525b50601f01601f1916929092016040019392505050565b6000826104f057634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561051b57634e487b7160e01b81526011600452602481fd5b500290565b600181811c9082168061053457607f821691505b6020821081141561055557634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212204d8ca8110e5b8ae455eeb79c629b81184455d6a05248cf197fdeafdcf2d120f564736f6c63430008040033";

type BankStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BankStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BankStorage__factory extends ContractFactory {
  constructor(...args: BankStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "BankStorage";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BankStorage> {
    return super.deploy(overrides || {}) as Promise<BankStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BankStorage {
    return super.attach(address) as BankStorage;
  }
  connect(signer: Signer): BankStorage__factory {
    return super.connect(signer) as BankStorage__factory;
  }
  static readonly contractName: "BankStorage";
  public readonly contractName: "BankStorage";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BankStorageInterface {
    return new utils.Interface(_abi) as BankStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BankStorage {
    return new Contract(address, _abi, signerOrProvider) as BankStorage;
  }
}
