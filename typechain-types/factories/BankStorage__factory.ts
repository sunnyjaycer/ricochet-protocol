/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BankStorage, BankStorageInterface } from "../BankStorage";

const _abi = [
  {
    inputs: [],
    name: "KEEPER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REPORTER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollateralTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollateralTokenLastUpdatedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollateralTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollateralTokenPriceGranularity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollateralizationRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDebtTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDebtTokenLastUpdatedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDebtTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDebtTokenPriceGranularity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInterestRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLiquidationPenalty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOriginationFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserveBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserveCollateralBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultCollateralAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vaultOwner",
        type: "address",
      },
    ],
    name: "getVaultCollateralizationRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultDebtAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultInterestPaymentFlowAmount",
    outputs: [
      {
        internalType: "int96",
        name: "",
        type: "int96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultRepayAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "principal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "vaults",
    outputs: [
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "debtAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        internalType: "int96",
        name: "interestPaymentFlow",
        type: "int96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610671806100206000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c8063685a5808116100c3578063c969ac061161007c578063c969ac06146102ef578063cb765c1d146102f7578063d267974c146102ff578063f327e32414610310578063f91614eb14610318578063fc2e39a61461032057600080fd5b8063685a5808146102305780636d483fe61461024857806386ef57381461026d578063a622ee7c14610275578063a860988c146102d2578063b71d7a6e146102e757600080fd5b8063317c9e4211610115578063317c9e42146101a1578063364bc15a146101a95780633f60d799146101d05780635257b566146101f757806353388f44146101ff578063639989ab1461020757600080fd5b806308dcd7c614610152578063151439501461016957806317d7de7c146101715780631b9084b4146101865780631e522b2914610199575b600080fd5b6005545b6040519081526020015b60405180910390f35b600a54610156565b610179610328565b6040516101609190610529565b6101566101943660046104fb565b6103ba565b601454610156565b600b54610156565b6101567ffc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4fab81565b6101567f3204c940063673962b481a0395619b3dbbd137589c419e993978c1c71bcf68ec81565b601154610156565b600e54610156565b33600090815260026020526040902060030154600b0b604051600b9190910b8152602001610160565b33600090815260026020526040902060010154610156565b6009546001600160a01b03165b6040516001600160a01b039091168152602001610160565b601354610156565b6102af6102833660046104fb565b6002602081905260009182526040909120805460018201549282015460039092015490929190600b0b84565b60408051948552602085019390935291830152600b0b6060820152608001610160565b33600090815260026020526040902054610156565b610156610467565b600454610156565b601054610156565b6003546001600160a01b0316610255565b600854610156565b600f54610156565b601254610156565b606060018054610337906105ea565b80601f0160208091040260200160405190810160405280929190818152602001828054610363906105ea565b80156103b05780601f10610385576101008083540402835291602001916103b0565b820191906000526020600020905b81548152906001019060200180831161039357829003601f168201915b5050505050905090565b6001600160a01b0381166000908152600260205260408120600101546103e257506000919050565b6005546004546001600160a01b03841660009081526002602052604090206001015461040e91906105b4565b6104189190610594565b600b54600a546001600160a01b03851660009081526002602052604090205461044191906105b4565b61044b9190610594565b610457906127106105b4565b6104619190610594565b92915050565b33600090815260026020819052604082200154819061048690426105d3565b60115433600090815260026020526040812060010154929350916301e1338091612710916104b491906105b4565b6104be9190610594565b6104c89190610594565b905060006104d682846105b4565b336000908152600260205260409020600101546104f3919061057c565b949350505050565b60006020828403121561050c578081fd5b81356001600160a01b0381168114610522578182fd5b9392505050565b6000602080835283518082850152825b8181101561055557858101830151858201604001528201610539565b818111156105665783604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561058f5761058f610625565b500190565b6000826105af57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156105ce576105ce610625565b500290565b6000828210156105e5576105e5610625565b500390565b600181811c908216806105fe57607f821691505b6020821081141561061f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220f1f2dd352793d8218be67543278e6b881f2105f4df9eea77d16bcf61b99f181764736f6c63430008040033";

type BankStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BankStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BankStorage__factory extends ContractFactory {
  constructor(...args: BankStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "BankStorage";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BankStorage> {
    return super.deploy(overrides || {}) as Promise<BankStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BankStorage {
    return super.attach(address) as BankStorage;
  }
  connect(signer: Signer): BankStorage__factory {
    return super.connect(signer) as BankStorage__factory;
  }
  static readonly contractName: "BankStorage";
  public readonly contractName: "BankStorage";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BankStorageInterface {
    return new utils.Interface(_abi) as BankStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BankStorage {
    return new Contract(address, _abi, signerOrProvider) as BankStorage;
  }
}
