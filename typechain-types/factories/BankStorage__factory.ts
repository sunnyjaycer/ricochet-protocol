/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BankStorage, BankStorageInterface } from "../BankStorage";

const _abi = [
  {
    inputs: [],
    name: "KEEPER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REPORTER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollateralTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollateralTokenLastUpdatedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollateralTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollateralTokenPriceGranularity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollateralizationRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDebtTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDebtTokenLastUpdatedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDebtTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDebtTokenPriceGranularity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInterestRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLiquidationPenalty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOriginationFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserveBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserveCollateralBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultCollateralAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vaultOwner",
        type: "address",
      },
    ],
    name: "getVaultCollateralizationRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultDebtAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultRepayAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "principal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "vaults",
    outputs: [
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "debtAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610629806100206000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80636d483fe6116100b8578063c969ac061161007c578063c969ac06146102a7578063cb765c1d146102af578063d267974c146102b7578063f327e324146102c8578063f91614eb146102d0578063fc2e39a6146102d857600080fd5b80636d483fe61461021457806386ef573814610239578063a622ee7c14610241578063a860988c1461028a578063b71d7a6e1461029f57600080fd5b8063317c9e421161010a578063317c9e4214610196578063364bc15a1461019e5780633f60d799146101c55780635257b566146101ec57806353388f44146101f4578063685a5808146101fc57600080fd5b806308dcd7c614610147578063151439501461015e57806317d7de7c146101665780631b9084b41461017b5780631e522b291461018e575b600080fd5b6005545b6040519081526020015b60405180910390f35b600a5461014b565b61016e6102e0565b60405161015591906104e1565b61014b6101893660046104b3565b610372565b60145461014b565b600b5461014b565b61014b7ffc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4fab81565b61014b7f3204c940063673962b481a0395619b3dbbd137589c419e993978c1c71bcf68ec81565b60115461014b565b600e5461014b565b3360009081526002602052604090206001015461014b565b6009546001600160a01b03165b6040516001600160a01b039091168152602001610155565b60135461014b565b61026f61024f3660046104b3565b600260208190526000918252604090912080546001820154919092015483565b60408051938452602084019290925290820152606001610155565b3360009081526002602052604090205461014b565b61014b61041f565b60045461014b565b60105461014b565b6003546001600160a01b0316610221565b60085461014b565b600f5461014b565b60125461014b565b6060600180546102ef906105a2565b80601f016020809104026020016040519081016040528092919081815260200182805461031b906105a2565b80156103685780601f1061033d57610100808354040283529160200191610368565b820191906000526020600020905b81548152906001019060200180831161034b57829003601f168201915b5050505050905090565b6001600160a01b03811660009081526002602052604081206001015461039a57506000919050565b6005546004546001600160a01b0384166000908152600260205260409020600101546103c6919061056c565b6103d0919061054c565b600b54600a546001600160a01b0385166000908152600260205260409020546103f9919061056c565b610403919061054c565b61040f9061271061056c565b610419919061054c565b92915050565b33600090815260026020819052604082200154819061043e904261058b565b60115433600090815260026020526040812060010154929350916301e13380916127109161046c919061056c565b610476919061054c565b610480919061054c565b9050600061048e828461056c565b336000908152600260205260409020600101546104ab9190610534565b949350505050565b6000602082840312156104c4578081fd5b81356001600160a01b03811681146104da578182fd5b9392505050565b6000602080835283518082850152825b8181101561050d578581018301518582016040015282016104f1565b8181111561051e5783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610547576105476105dd565b500190565b60008261056757634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610586576105866105dd565b500290565b60008282101561059d5761059d6105dd565b500390565b600181811c908216806105b657607f821691505b602082108114156105d757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220ab70ef9dab0f642f3c1aaff1d1eb7bd8552930d37f2a0cdbbd84d720dc84effc64736f6c63430008040033";

type BankStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BankStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BankStorage__factory extends ContractFactory {
  constructor(...args: BankStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "BankStorage";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BankStorage> {
    return super.deploy(overrides || {}) as Promise<BankStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BankStorage {
    return super.attach(address) as BankStorage;
  }
  connect(signer: Signer): BankStorage__factory {
    return super.connect(signer) as BankStorage__factory;
  }
  static readonly contractName: "BankStorage";
  public readonly contractName: "BankStorage";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BankStorageInterface {
    return new utils.Interface(_abi) as BankStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BankStorage {
    return new Contract(address, _abi, signerOrProvider) as BankStorage;
  }
}
